#!/bin/bash

docker_networks=$(dockerNetworks)
if [ -z "$docker_networks" ]; then
  echo "No inet network"
  exit
fi

echo "Enabling connection to secure interface and docker network"

iptables -F
iptables -X

iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -i lo -j ACCEPT
iptables -A INPUT -i eth0 -s "${docker_networks}" -j ACCEPT

iptables -A OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT
iptables -A OUTPUT -o tap+ -j ACCEPT
iptables -A OUTPUT -o tun+ -j ACCEPT
iptables -A OUTPUT -o nordlynx+ -j ACCEPT
iptables -A OUTPUT -o eth0 -d "${docker_networks}" -j ACCEPT
iptables -A OUTPUT -o eth0 -p udp -m udp --dport 53 -j ACCEPT
iptables -A OUTPUT -o eth0 -p udp -m udp --dport 51820 -j ACCEPT
iptables -A OUTPUT -o eth0 -p tcp -m tcp --dport 1194 -j ACCEPT
iptables -A OUTPUT -o eth0 -p udp -m udp --dport 1194 -j ACCEPT
iptables -A OUTPUT -o eth0 -p tcp -m tcp --dport 443 -j ACCEPT

iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A FORWARD -i lo -j ACCEPT
iptables -A FORWARD -i eth0 -d "${docker_networks}" -j ACCEPT
iptables -A FORWARD -i eth0 -s "${docker_networks}" -j ACCEPT

iptables -t nat -A POSTROUTING -o tap+ -j MASQUERADE
iptables -t nat -A POSTROUTING -o tun+ -j MASQUERADE
iptables -t nat -A POSTROUTING -o nordlynx+ -j MASQUERADE